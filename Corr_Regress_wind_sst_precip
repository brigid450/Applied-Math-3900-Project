{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "!conda install --yes cartopy dask netCDF4 bottleneck"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import xarray as xr\n",
    "import numpy as np\n",
    "import cartopy as ccrs\n",
    "from matplotlib import pyplot as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at 1979-2018 Rainfall on the state of California, (NOA extRealtime precipitation) as well as the ENSO anomalies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "precipurlbymonth=\"http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP/.CPC/.UNIFIED_PRCP/.GAUGE_BASED/.GLOBAL/.v1p0/.extREALTIME/.rain/T/monthlyAverage/T/%28Jan%201979%29/%28Dec%202018%29/RANGE/X/%28130W%29/%28100W%29/RANGE/Y/25/50/RANGE/T/(days%20since%201960-01-01)streamgridunitconvert/dods\"\n",
    "precipds=xr.open_dataset(precipurlbymonth)\n",
    "ninourl=\"http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/.version5/.sst/Y/-5/5/RANGEEDGES/X/190/240/RANGEEDGES/%5BX/Y%5Daverage/zlev/removeGRID/T/%28Jan%201979%29/%28Dec%202018%29/RANGE/yearly-anomalies/T/(days%20since%201960-01-01)streamgridunitconvert/dods\"\n",
    "ninods=xr.open_dataset(ninourl)\n",
    "ninods\n",
    "precipds\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "ninods.sst.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "wind = xr.open_dataset(\"http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP-DOE/.Reanalysis-2/.Monthly/.pgb/.pgb/.ugrdprs/P/200/VALUE/X/220/240/RANGE/Y/27/40/RANGE/[X/Y]average/SOURCES/.NOAA/.NCEP-DOE/.Reanalysis-2/.Monthly/.pgb/.pgb/.ugrdprs/P/200/VALUE/X/210/240/RANGE/Y/45/60/RANGE/[X/Y]average/sub/P/removeGRID/T/(days%20since%201960-01-01)streamgridunitconvert/dods\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "precipanom=precipds.groupby('T.month') - precipds.groupby('T.month').mean('T')\n",
    "Spn=(precipanom.rain*ninods.sst).groupby(\"T.month\").mean(\"T\")\n",
    "Sn = ninods.sst.groupby('T.month').std('T')\n",
    "Sp = precipanom.rain.groupby('T.month').std('T')\n",
    "Cpn = Spn/Sn/Sp\n",
    "windanom=wind.groupby(\"T.month\")-wind.groupby(\"T.month\").mean(\"T\")\n",
    "Swn=(windanom.ugrdprs*ninods.sst).groupby(\"T.month\").mean(\"T\")\n",
    "Sw = windanom.ugrdprs.groupby('T.month').std('T')\n",
    "Cwn=Swn/Sn/Sw\n",
    "Spw=(windanom.ugrdprs*precipanom.rain).groupby(\"T.month\").mean(\"T\")\n",
    "Cpw=Spw/Sw/Sp"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Function that calculates correlation and formats data for the map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "np.shape(Cpn[0])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "(np.abs(Cwn[0])>.3).values\n",
    "\n",
    " \n",
    "def sample_data(month,typeof):\n",
    "    \"\"\"Return ``lons``, ``lats`` and ``data`` of some fake data.\"\"\"\n",
    "\n",
    "    if typeof==\"Cpn\":\n",
    "        data=Cpn[month]\n",
    "    elif typeof==\"Cpw\":\n",
    "        data=Cpw[month]\n",
    "    elif typeof==\"Bpw\":\n",
    "        data=Bpw[month]\n",
    "    else:\n",
    "        data=Bpn[month]\n",
    "    nlats, nlons = np.shape(data)\n",
    "    lats = np.linspace(24.75,50.25, nlats)\n",
    "    lons= np.linspace(-130.25,-99.75,nlons)\n",
    "    lons, lats = np.meshgrid(lons, lats)\n",
    "    return lons, lats, data\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Function that plots map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import cartopy.io.shapereader as shpreader\n",
    "\n",
    "def main(month,typeof,title):\n",
    "    central_lon, central_lat = -115, 40\n",
    "    extent = [-130,-100,25, 50]\n",
    "    ax = plt.axes(projection=ccrs.crs.Robinson())\n",
    "    ax.set_title(title)\n",
    "    ax.set_extent(extent)\n",
    "    ax.gridlines()\n",
    "    ax.coastlines(resolution='50m')\n",
    "    lons, lats, data = sample_data(month,typeof)\n",
    "    cb=ax.contourf(lons, lats, data,transform=ccrs.crs.PlateCarree(),cmap='nipy_spectral')\n",
    "    plt.colorbar(cb, cmap='nipy_spectral', orientation='vertical',ticklocation='auto')\n",
    "    levels = [-1,-.316,0,.316,1]\n",
    "    ax.contourf(lons, lats, data,levels=levels,hatches=[\".\",\" \",\" \",\".\"], alpha=1)\n",
    "    plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(10,\"Cpn\",\"November precip-niño\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(10,\"Cpw\",\"November precip-wind\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(11,\"Cpn\",\"December precip-niño\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(11,\"Cpw\",\"December precip-wind\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(0,\"Cpn\",\"January precip-niño\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(0,\"Cpw\",\"January precip-wind\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(1,\"Cpn\",\"February precip-niño\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(1,\"Cpw\",\"February precip-niño\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Cwn.plot()\n",
    "plt.title(\"Correlation between wind and SST Over Each Month\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "precipmileurl=\"http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP/.CPC/.UNIFIED_PRCP/.GAUGE_BASED/.GLOBAL/.v1p0/.extREALTIME/.rain/T/monthlyAverage/T/%28Jan%201979%29/%28Dec%202018%29/RANGE/X/%28130W%29/%28100W%29/RANGE/Y/25/50/RANGE/X/1/boxAverage/Y/1/boxAverage/T/%28days%20since%201960-01-01%29streamgridunitconvert/dods\"\n",
    "precipdsmile=xr.open_dataset(precipmileurl)\n",
    "precipdsmile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "precipanom=precipdsmile.groupby('T.month') - precipdsmile.groupby('T.month').mean('T')\n",
    "Spn=(precipanom.rain*ninods.sst).groupby(\"T.month\").mean(\"T\")\n",
    "Sn = ninods.sst.groupby('T.month').std('T')\n",
    "Sp = precipanom.rain.groupby('T.month').std('T')\n",
    "Cpn = Spn/Sn/Sp\n",
    "windanom=wind.groupby(\"T.month\")-wind.groupby(\"T.month\").mean(\"T\")\n",
    "Swn=(windanom.ugrdprs*ninods.sst).groupby(\"T.month\").mean(\"T\")\n",
    "Sw = windanom.ugrdprs.groupby('T.month').std('T')\n",
    "Cwn=Swn/Sn/Sw\n",
    "Spw=(windanom.ugrdprs*precipanom.rain).groupby(\"T.month\").mean(\"T\")\n",
    "Cpw=Spw/Sw/Sp\n",
    "vn=ninods.sst.groupby('T.month').var('T')\n",
    "vw=windanom.ugrdprs.groupby('T.month').var('T')\n",
    "Bpn=Spn/vn\n",
    "Bpw=Spw/vw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "monthlist=[\"N\",\"D\",\"J\",\"F\"]\n",
    "for i,j in enumerate([10,11,0,1]):\n",
    "    if __name__ == '__main__':\n",
    "        main(j,\"Cpn\",monthlist[i]+\" sst correlation\")\n",
    "    if __name__ == '__main__':\n",
    "        main(j,\"Cwn\",monthlist[i]+\" wind correlation\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(10,\"Cpn\",\"November precip-niño 1 sq m\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(10,\"Cpw\",\"November precip-wind 1 sq m\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(11,\"Cpn\",\"December precip-niño 1 sq m\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(11,\"Cwn\",\"December precip wind 1 sq m\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(0,\"Cpn\",\"January precip-niño 1 sq m\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(0,\"Cwn\",\"January precip-wind 1 sq m\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(1,\"Cpn\",\"February precip-niño 1 sq m\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == '__main__':\n",
    "    main(1,\"Cwn\",\"February precip-wind 1 sq m\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Regression: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "vn=ninods.sst.groupby('T.month').var('T')\n",
    "vw=windanom.ugrdprs.groupby('T.month').var('T')\n",
    "Bpn=Spn/vn\n",
    "Bpw=Spw/vw"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "monthlist=[\"N\",\"D\",\"J\",\"F\"]\n",
    "for i,j in enumerate([10,11,0,1]):\n",
    "    if __name__ == '__main__':\n",
    "        main(j,\"Bpn\",monthlist[i]+\" sst regression\")\n",
    "    if __name__ == '__main__':\n",
    "        main(j,\"Bwn\",monthlist[i]+\" wind regression\")\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Incorporate Wind Spatially: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "windspace=xr.open_dataset(\"http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP-DOE/.Reanalysis-2/.Monthly/.pgb/.pgb/.ugrdprs/P/200/VALUE/T/monthlyAverage/T/%28Jan%201979%29/%28Dec%202018%29/RANGE/X/%28130W%29/%28100W%29/RANGE/Y/25/50/RANGE/X/1/boxAverage/Y/1/boxAverage/T/%28days%20since%201960-01-01%29streamgridunitconvert/dods\")\n",
    "windspace"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "windspace=windspace.drop(\"P\")\n",
    "windanom=windspace.groupby(\"T.month\")-windspace.groupby(\"T.month\").mean(\"T\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
